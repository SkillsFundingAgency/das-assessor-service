{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "environmentName": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "deploySandbox": {
            "type": "bool"
        },
        "aspSize": {
            "type": "string"
        },
        "aspInstances": {
            "type": "int"
        },
        "internalApiSandboxCustomHostName": {
            "type": "string"
        },
        "appServiceAllowedIPs": {
            "type": "array"
        },
        "externalActiveApiSandboxCustomHostname": {
            "type": "string"
        },
        "externalApiSandboxAppServiceCertificateName": {
            "type": "string"
        },
        "internalApiSandboxAppServiceCertificateName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedSQLServerName": {
            "type": "string"
        },
        "elasticPoolName": {
            "type": "string",
            "defaultValue": ""
        },
        "databaseSkuName": {
            "type": "string",
            "defaultValue": "S0"
        },
        "databaseTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "activeSandboxSubnetObject": {
            "type": "object"
        },
        "subnetServiceEndpointList": {
            "type": "array"
        },
        "subnetDelegations": {
            "type": "array"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "activeSandboxAppServicePlanName": "[concat(variables('resourceNamePrefix'), 'ac-sbox-asp')]",
        "externalApiActiveSandboxAppServiceName": "[concat(variables('resourceNamePrefix'), 'acextapi-sbox-as')]",
        "internalApiActiveSandboxAppServiceName": "[concat(variables('resourceNamePrefix'), 'acintapi-sbox-as')]",
        "instanceName": "[if(equals(toUpper(parameters('environmentName')),'PROD'),'',parameters('environmentName'))]",
        "sandboxDatabaseName": "[concat(variables('resourceNamePrefix'), '-sbox-db')]",
        "SandboxApplicationIdentifierUri ":"[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', '-assacextapi-sbox-as-ar'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('activeSandboxAppServicePlanName'), '-app-srvce-plan-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[parameters('deploySandbox')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('activeSandboxAppServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('aspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('aspInstances')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[concat(parameters('activeSandboxSubnetObject').name, '-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('activeSandboxSubnetObject').name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[parameters('activeSandboxSubnetObject').addressSpace]"
                    },
                    "serviceEndpointList": {
                        "value": "[parameters('subnetServiceEndpointList')]"
                    },
                    "delegations": {
                        "value": "[parameters('subnetDelegations')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('activeSandboxSubnetObject').name, '-sql-firewall-rule-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'sql-server-firewall-rules.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serverName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "subnetResourceIdList": {
                        "value": "[createArray(reference(concat(parameters('activeSandboxSubnetObject').name, '-', parameters('utcValue'))).outputs.SubnetResourceId.value)]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('externalApiActiveSandboxAppServiceName'), '-app-service-cert-', parameters('utcValue'))]",

            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[greater(length(parameters('externalApiSandboxAppServiceCertificateName')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('externalApiSandboxAppServiceCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('internalApiActiveSandboxAppServiceName'), '-app-service-cert-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[greater(length(parameters('internalApiSandboxAppServiceCertificateName')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('internalApiSandboxAppServiceCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('externalApiActiveSandboxAppServiceName'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[parameters('deploySandbox')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('externalApiActiveSandboxAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('activeSandboxAppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('activeSandboxSubnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "ApplicationInsights:InstrumentationKey",
                                    "value": "[reference(concat(variables('externalApiActiveSandboxAppServiceName'), '-app-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "InstanceName",
                                    "value": "[concat(variables('instanceName'),' (ActiveSandbox)')]"
                                },
                                {
                                    "name": "UseSandboxServices",
                                    "value": "yes"
                                }
                            ]
                        }
                    },
                    "appServiceConnectionStrings": {
                        "value": {
                            "array": [
                                {
                                    "name": "Redis",
                                    "connectionString": "[parameters('loggingRedisConnectionString')]",
                                    "type": "Custom"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('externalActiveApiSandboxCustomHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('externalApiSandboxAppServiceCertificateName')), 0), reference(concat(variables('externalApiActiveSandboxAppServiceName'), '-app-service-cert-', parameters('utcValue'))).outputs.certificateThumbprint.value, '')]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('activeSandboxAppServicePlanName'), '-app-srvce-plan-', parameters('utcValue'))]"
            ]
        },
        {
            "name": "[concat(variables('internalApiActiveSandboxAppServiceName'), '-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[parameters('deploySandbox')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('internalApiActiveSandboxAppServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('activeSandboxAppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference(concat(parameters('activeSandboxSubnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "ApplicationInsights:InstrumentationKey",
                                    "value": "[reference(concat(variables('internalApiActiveSandboxAppServiceName'), '-app-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                                },
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[toUpper(parameters('environmentName'))]"
                                },
                                {
                                    "name": "UseSandboxServices",
                                    "value": "yes"
                                },
                                {
                                    "name": "WEBSITE_SWAP_WARMUP_PING_PATH",
                                    "value": "/health"
                                },
                                {
                                    "name": "WEBSITE_SWAP_WARMUP_PING_STATUSES",
                                    "value": "200"
                                }
                            ]
                        }
                    },
                    "appServiceConnectionStrings": {
                        "value": {
                            "array": [
                                {
                                    "name": "Redis",
                                    "connectionString": "[parameters('loggingRedisConnectionString')]",
                                    "type": "Custom"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('internalApiSandboxCustomHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('internalApiSandboxAppServiceCertificateName')), 0), reference(concat(variables('internalApiActiveSandboxAppServiceName'), '-app-service-cert-', parameters('utcValue'))).outputs.certificateThumbprint.value, '')]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('activeSandboxAppServicePlanName'), '-app-srvce-plan-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('externalApiActiveSandboxAppServiceName'), '-app-insights-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[parameters('deploySandbox')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('externalApiActiveSandboxAppServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('externalApiActiveSandboxAppServiceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('internalApiActiveSandboxAppServiceName'), '-app-insights-', parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "condition": "[parameters('deploySandbox')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('internalApiActiveSandboxAppServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('internalApiActiveSandboxAppServiceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-10-01",
            "name": "[concat(variables('sandboxDatabaseName'), '-sql-database-',parameters('utcValue'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('sandboxDatabaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "elasticPoolName": {
                        "value": "[parameters('elasticPoolName')]"
                    },
                    "databaseSkuName": {
                        "value": "[parameters('databaseSkuName')]"
                    },
                    "databaseTier": {
                        "value": "[parameters('databaseTier')]"
                    },
                    "logAnalyticsSubscriptionId": {
                        "value": "[parameters('logAnalyticsSubscriptionId')]"
                    },
                    "logAnalyticsResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        },
        "ExternalApiActiveSandboxAppServiceName": {
            "type": "string",
            "value": "[variables('externalApiActiveSandboxAppServiceName')]"
        },
        "InternalApiActiveSandboxAppServiceName": {
            "type": "string",
            "value": "[variables('internalApiActiveSandboxAppServiceName')]"
        },
        "SandboxDatabaseName": {
            "type": "string",
            "value": "[variables('sandboxDatabaseName')]"
        },
        "SandboxApplicationIdentifierUri": {
            "type": "string",
            "value": "[variables('sandboxApplicationIdentifierUri')]"
        }       
    }
}

parameters:  
  Environment:
  ServiceConnection:
  OverrideBlockOnPossibleDataLoss: false

jobs:
- deployment: DeployResources
  pool:
    name: DAS - Continuous Deployment Agents
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - template: azure-pipelines-templates/deploy/step/wait-azure-devops-deployment.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            EnvironmentId: $(Environment.Id)
            PipelineName: $(Build.DefinitionName)
            RunId: $(Build.BuildId)
        - template: azure-pipelines-templates/deploy/step/set-backendaccessrestrictions-variable.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SharedEnvResourceGroup: $(SharedEnvResourceGroup)
            SharedEnvVirtualNetworkName : $(SharedEnvVirtualNetworkName)
            BackEndAccessRestrictionsExcludedSubnets: $(BackEndAccessRestrictionsExcludedSubnets)
            ResourceEnvironmentName: $(ResourceEnvironmentName)
            UnrestrictedEnvironments: $(UnrestrictedEnvironments)
            UptimeMonitoringAccessRestrictions: $(UptimeMonitoringAccessRestrictions)
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SubscriptionId: $(SubscriptionId)
            Location: $(ResourceGroupLocation)
            Environment: ${{ parameters.Environment }}
            TemplatePath: $(Pipeline.Workspace)/SFA.DAS.AssessorService/azure/template.json
            ParametersPath: $(Pipeline.Workspace)/SFA.DAS.AssessorService/azure/template.parameters.json
            IsMultiRepoCheckout: true
            TemplateSecrets:
              LoggingRedisConnectionString: $(LoggingRedisConnectionString)
              ConfigurationStorageConnectionString: $(ConfigurationStorageConnectionString)
        - template: azure-pipelines-templates/deploy/step/get-apim-subscription-key.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            ApimResourceGroup: $(SharedApimResourceGroup)
            ApimName: $(SharedApimName)
            SubscriptionId: $(UiAppServiceName)
            PipelineVariableName: AssessorApimSubscriptionKey
            IsMultiRepoCheckout: true
        - template: azure-pipelines-templates/deploy/step/generate-config.yml@das-platform-building-blocks
          parameters:
            EnvironmentName: $(EnvironmentName)
            ServiceConnection: ${{ parameters.ServiceConnection }}
            SourcePath: $(Pipeline.Workspace)/das-employer-config/Configuration/das-assessor-service
            StorageAccountName: $(ConfigurationStorageAccountName)
            StorageAccountResourceGroup: $(SharedEnvResourceGroup)
            TargetFileName: '*.schema.json'
            TableName: Configuration
            ConfigurationSecrets:
              AssessorApimSubscriptionKey: $(AssessorApimSubscriptionKey)
              LoginServiceApiClientSecret: $(LoginServiceApiClientSecret)
              LoginServiceClientSecret: $(LoginServiceClientSecret)
              AssessorApiAuthenticationClientSecret: $(AssessorApiAuthenticationClientSecret)
              AzureApiAuthenticationKey: $(AzureApiAuthenticationKey)
              ReferenceDataApiAuthenticationClientSecret: $(ReferenceDataApiAuthenticationClientSecret)
              RoatpApiAuthenticationClientSecret: $(RoatpApiAuthenticationClientSecret)
              SandboxApiAuthenticationClientSecret: $(SandboxApiAuthenticationClientSecret)
              ApiNotificationsClientToken: $(ApiNotificationsClientToken)
              SessionRedisConnectionString: $(SessionRedisConnectionString)
        - template: azure-pipelines-templates/deploy/step/sql-dacpac-deploy.yml@das-platform-building-blocks
          parameters:
            AzureSubscription: ${{ parameters.ServiceConnection }}
            ServerName: $(SharedSQLServerFQDN)
            SqlUsername: $(SharedSQLServerUsername)
            SqlPassword: $(SharedSQLServerPassword)
            DacpacFile: $(Pipeline.Workspace)/DacpacArtifact/src/SFA.DAS.AssessorService.Database/bin/Release/SFA.DAS.AssessorService.Database.dacpac
            DatabaseName: $(DatabaseName)
            OverrideBlockOnPossibleDataLoss: ${{ parameters.OverrideBlockOnPossibleDataLoss }}
            Environment: ${{ parameters.Environment }}
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: $(AppServiceName)
            DeploymentPackagePath: $(Pipeline.Workspace)/SFA.DAS.AssessorService.Web/SFA.DAS.AssessorService.Web.zip
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: $(AppServiceName)
            DeploymentPackagePath: $(Pipeline.Workspace)/SFA.DAS.AssessorService.Api/SFA.DAS.AssessorService.Api.zip
        - template: azure-pipelines-templates/deploy/step/app-deploy.yml@das-platform-building-blocks
          parameters:
            ServiceConnection: ${{ parameters.ServiceConnection }}
            AppServiceName: $(AppServiceName)
            DeploymentPackagePath: $(Pipeline.Workspace)/SFA.DAS.AssessorService.Api.External/SFA.DAS.AssessorService.Api.External.zip
        - task: AzurePowerShell@5
          displayName: 'Import Swagger Definition'
          inputs:
            azureSubscription: 'NAS Pre-Prod (ARM)'
            ScriptPath: '$(System.DefaultWorkingDirectory)/das-assessor-service/AssessorService/Azure/scripts/Import-APIMSwaggerApiDefinition.ps1'
            ScriptArguments: '-ResourceGroupName "$(ApimResourceGroup)" -ServiceName "$(ApimServiceName)" -ApiId "$(ApiId)"  -SwaggerSpecificationUrl "$(SwaggerSpecificationUrl)" -ApiUrlSuffix "$(ApiUrlSuffix)"'
            azurePowerShellVersion: LatestVersion
            pwsh: true
        - task: AzurePowerShell@5
          displayName: 'Set API Level Policy'
          inputs:
            azureSubscription: 'NAS Pre-Prod (ARM)'
            ScriptPath: '$(System.DefaultWorkingDirectory)/das-assessor-service/AssessorService/Azure/scripts/Set-ApimApiPolicy.ps1'
            ScriptArguments: '-ResourceGroupName "$(ApimResourceGroup)" -ServiceName "$(ApimServiceName)" -ApiId "$(ApiId)"  -ApimApiPolicyFilePath "$(ApimApiPolicyFilePath)"'
            azurePowerShellVersion: LatestVersion
            pwsh: true
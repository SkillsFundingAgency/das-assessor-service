<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnotherOrganisationUsingTheUkprn" xml:space="preserve">
    <value>The UKPRN entered is already used by another organisation</value>
  </data>
  <data name="ContactIdInvalidForOrganisationId" xml:space="preserve">
    <value>The contact ID entered is invalid for the given organisation</value>
  </data>
  <data name="EmailIsMissing" xml:space="preserve">
    <value>Enter an email address</value>
  </data>
  <data name="ContactIdIsRequired" xml:space="preserve">
    <value>A valid contact is required</value>
  </data>
  <data name="EmailAlreadyPresentInAnotherOrganisation" xml:space="preserve">
    <value>This email is being used by another contact in a different organisation</value>
  </data>
  <data name="DisplayNameIsMissing" xml:space="preserve">
    <value>Enter a contact name</value>
  </data>
  <data name="NoOrganisationId" xml:space="preserve">
    <value>Enter an organisation ID</value>
  </data>
  <data name="OrganisationIdAlreadyUsed" xml:space="preserve">
    <value>There is already an entry for this organisation ID</value>
  </data>
  <data name="OrganisationIdTooLong" xml:space="preserve">
    <value>The length of the organisation ID is too long</value>
  </data>
  <data name="OrganisationNameEmpty" xml:space="preserve">
    <value>Enter a valid organisation name</value>
  </data>
  <data name="OrganisationNameTooShort" xml:space="preserve">
    <value>Enter a valid organisation name that is 2 or more letters</value>
  </data>
  <data name="OrganisationNotFound" xml:space="preserve">
    <value>There is no organisation for this organisation ID</value>
  </data>
  <data name="OrganisationStandardAlreadyExists" xml:space="preserve">
    <value>This organisation/standard already exists</value>
  </data>
  <data name="OrganisationStandardDoesNotExist" xml:space="preserve">
    <value>This organisation/standard does not exist</value>
  </data>
  <data name="OrganisationTypeIsInvalid" xml:space="preserve">
    <value>This is not a valid organisation type</value>
  </data>
  <data name="OrganisationTypeIsRequired" xml:space="preserve">
    <value>You must choose an organisation type</value>
  </data>
  <data name="StandardNotFound" xml:space="preserve">
    <value>There is no standard present for the given standard code</value>
  </data>
  <data name="UkprnAlreadyUsed" xml:space="preserve">
    <value>There is already an organisation with this UKPRN</value>
  </data>
  <data name="UkprnIsInvalid" xml:space="preserve">
    <value>The UKPRN must be 8 numbers</value>
  </data>
  <data name="DisplayNameTooShort" xml:space="preserve">
    <value>Enter a name that is 2 or more characters</value>
  </data>
  <data name="ContactIdDoesntExist" xml:space="preserve">
    <value>The Contact Id is invalid</value>
  </data>
  <data name="EmailIsIncorrectFormat" xml:space="preserve">
    <value>The email is the wrong format</value>
  </data>
  <data name="ErrorMessageOrganisationNameAlreadyPresent" xml:space="preserve">
    <value>There is already an organisation present with this name</value>
  </data>
  <data name="NoDeliveryAreasPresent" xml:space="preserve">
    <value>There must be at least one delivery area</value>
  </data>
  <data name="DeliveryAreaNotValid" xml:space="preserve">
    <value>At least 1 of the delivery areas is not valid</value>
  </data>
  <data name="SearchStandardsTooShort" xml:space="preserve">
    <value>The entry must be a number or a phrase with at least 2 characters</value>
  </data>
  <data name="OrganisationStandardEffectiveFromAfterStandardEffectiveTo" xml:space="preserve">
    <value>The organisation standard effective from date must be on or before the standard effective to date</value>
  </data>
  <data name="OrganisationStandardEffectiveFromAfterStandardLastDayForNewStarts" xml:space="preserve">
    <value>The organisation standard effective from date must be on or before the standard last day for new starts</value>
  </data>
  <data name="OrganisationStandardEffectiveFromBeforeStandardEffectiveFrom" xml:space="preserve">
    <value>The organisation standard effective from date must be on or after the standard effective from date</value>
  </data>
  <data name="OrganisationStandardEffectiveToAfterStandardEffectiveTo" xml:space="preserve">
    <value>The organisation standard effective to date must be on or before the standard effective to date</value>
  </data>
  <data name="OrganisationStandardEffectiveToBeforeStandardEffectiveFrom" xml:space="preserve">
    <value>The organisation standard effective to date must be on or after the standard effective from date</value>
  </data>
  <data name="OrganisationStandardEffectiveFromAfterEffectiveTo" xml:space="preserve">
    <value>The organisation standard effective from date must be on or before organisation standard effective to date</value>
  </data>
  <data name="OrganisationStandardCannotBeMadeLiveBecauseEffectiveFromNotSet" xml:space="preserve">
    <value>This standard cannot be made live because the Effective From is not set</value>
  </data>
  <data name="OrganisationStandardCannotBeUpdatedBecauseEffectiveFromNotSet" xml:space="preserve">
    <value>This standard cannot be updated because the Effective From is not set</value>
  </data>
  <data name="OrganisationStandardCannotBeAddedBecauseEffectiveFromNotSet" xml:space="preserve">
    <value>An effective from date is required</value>
  </data>
  <data name="OrganisationStandardCannotBeUpdatedBecauseOrganisationNotLive" xml:space="preserve">
    <value>This standard cannot be updated because the organisation is not Live</value>
  </data>
  <data name="AddressIsNotEntered" xml:space="preserve">
    <value>There are insufficient details in the address</value>
  </data>
  <data name="PostcodeIsNotEntered" xml:space="preserve">
    <value>There are insufficient details in the postcode</value>
  </data>
  <data name="UkprnIsNotPresent" xml:space="preserve">
    <value>The organisation cannot go live without a UKPRN</value>
  </data>
  <data name="ContactsAreNotPresent" xml:space="preserve">
    <value>The organisation cannot go live without at least one contact</value>
  </data>
  <data name="StandardsAreNotPresent" xml:space="preserve">
    <value>The organisation cannot go live without at least one standard</value>
  </data>
  <data name="ContactDetailsAreDuplicates" xml:space="preserve">
    <value>There is already a contact with this name, email and phone number</value>
  </data>
  <data name="OrganisationCharityNumberAlreadyUsed" xml:space="preserve">
    <value>There is already an organisation with this charity registration number</value>
  </data>
  <data name="OrganisationCompanyNumberAlreadyUsed" xml:space="preserve">
    <value>There is already an organisation with this company number</value>
  </data>
  <data name="OrganisationCharityNumberNotValid" xml:space="preserve">
    <value>Enter valid charity number</value>
  </data>
  <data name="OrganisationCompanyNumberNotValid" xml:space="preserve">
    <value>Enter valid company number</value>
  </data>
</root>
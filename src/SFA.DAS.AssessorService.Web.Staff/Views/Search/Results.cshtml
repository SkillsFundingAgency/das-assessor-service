@model SFA.DAS.AssessorService.Web.Staff.Controllers.SearchViewModel

@{

}

<h2>Results</h2>

<a asp-action="Index" class="button">Search Again</a>

<b>Number of results: </b> @Model.PaginatedList.TotalRecordCount

<table class="table">
    <thead>
        <tr>
            <th>Surname</th>
            <th>First Name</th>
            <th>Uln</th>
            <th>Standard</th>
            <th>Certificate Reference</th>
            <th>Current Status</th>
            <th>Last Updated</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var result in Model.PaginatedList.Items)
        {
            <tr>
                <td>@result.FamilyName</td>
                <td>@result.GivenNames</td>
                <td>@result.Uln</td>
                <td>@result.Standard</td>
                <td>@result.CertificateReference</td>
                <td>@result.CertificateStatus</td>
                <td>@result.LastUpdatedAt?.ToShortDateString()</td>
                <td><a class="button" asp-action="Select" asp-route-stdcode="@result.StandardCode" asp-route-uln="@result.Uln">Select</a></td>
            </tr>
        }
    </tbody>
</table>

@if (Model.PaginatedList.HasPreviousPage)
{
    <form asp-controller="Search" asp-action="Index">
        @Html.HiddenFor(m => m.SearchString)
        <input type="hidden" id="Page" name="Page" value="@( Model.PaginatedList.PageIndex - 1)" />
        <button class="button">Previous</button>
    </form>

}

@if (Model.PaginatedList.HasNextPage)
{
    <form asp-controller="Search" asp-action="Index">
        @Html.HiddenFor(m => m.SearchString)
        <input type="hidden" id="Page" name="Page" value="@( Model.PaginatedList.PageIndex + 1)" />
        <button class="button">Next</button>
    </form>

}
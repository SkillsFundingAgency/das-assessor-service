@using Microsoft.EntityFrameworkCore.Internal
@using Microsoft.EntityFrameworkCore.Query.Internal
@model SFA.DAS.AssessorService.Web.Staff.ViewModels.FinancialApplicationViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<a href="@Url.Action("PreviousApplications", "Financial")" class="govuk-back-link">Back</a>

<h3>@Model.Organisation.OrganisationDetails.LegalName</h3>

<table>
    <thead>
        <tr>
            <th>Grade</th>
            <th>Date reviewed</th>
            <th>Comments</th>
            <th>Reviewer</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.Grade.SelectedGrade</td>
            <td>@Model.Grade.GradedDateTime.ToShortDateString()</td>
            <td>@(Model.Grade.InadequateMoreInformation ?? Model.Grade.SatisfactoryMoreInformation ?? "")</td>
            <td>@Model.Grade.GradedBy</td>
        </tr>
    </tbody>
</table>

@if (Model.Section.PagesContainingUploadQuestions.Any())
{
    <div>
        <a href="@Url.Action("Download", "Financial", new { Model.Section.ApplicationId })">Download financial statements</a>
        @* Download @uploadQuestion.Label</a> *@
    </div>
}

<table>
    <tr>
        <th>
            Questions
        </th>
        <th>
            Answers
        </th>
    </tr>
    @foreach (var pg in Model.Section.QnAData.Pages)
    {
        foreach (var question in pg.Questions.Where(q => q.Input.Type != "FileUpload"))
        {
            <tr>
                <td>@question.Label</td>
                <td>@pg.PageOfAnswers.SelectMany(poa => poa.Answers).SingleOrDefault(a => a.QuestionId == question.QuestionId)?.Value</td>
            </tr>
        }
    }
</table>

<div class="form-group">
    <a asp-controller="Financial" asp-action="PreviousApplications" class="govuk-button">Return to previous applications</a>
</div>

@model SFA.DAS.AssessorService.Web.Staff.ViewModels.Private.CertificateApprovalViewModel
@using SFA.DAS.AssessorService.Domain.Consts
@using SFA.DAS.AssessorService.Web.Staff


@{ ViewBag.Title = "Staff Dashboard"; }

<div class="grid-row">
    <div class="column-three-thirds" sfa-show-for-policy="@Startup.Policies.OperationsTeamOnly">

        <a class="link-back" asp-controller="Dashboard" asp-action="Index">Back</a>

        @* hidden with css by default *@
        <div class="js-error-summary error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
            <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                There's a problem
            </h2>
            <ul class="js-error-summary-list error-summary-list"></ul>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                    There's a problem
                </h2>
                <ul class="error-summary-list">
                    <li>
                        <a sfa-validation-for="FirstName"></a>
                    </li>
                </ul>
            </div>
        }


        <div sfa-anyvalidationerror-class="after-error-summary">
            <h1 class="heading-large">
                Approve/Reject Privately Funded Certificates?
            </h1>

            @if (@Model.CertificateDetailApprovalViewModels.Any())
            {
                <table class="table table-font-xsmall">
                    <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>ULN</th>
                        <th>Standard</th>
                        <th>Certificate Reference</th>
                        <th>Approve</th>

                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var result in Model.CertificateDetailApprovalViewModels)
                    {
                        <tr>
                            @* <td><a asp-action="Select" asp-route-stdcode="@result.StandardCode" asp-route-uln="@result.Uln" asp-route-searchstring="@Model.SearchString" asp-route-page="@Model.StaffSearchResult.StaffSearchItems.PageIndex">@result.GivenNames @result.FamilyName</a></td> *@
                            <td>@result.FullName</td>
                            <td>@result.Uln</td>
                            <td>@result.StandardCode</td>
                            <td>@result.CertificateReference</td>
                            <td>
                                <select asp-for=@result.IsApproved
                                        asp-items="@(new SelectList(@result.ApprovedRejected, "Value", "Text"))">
                                </select>
                            </td>

                        </tr>
                    }
                    </tbody>
                </table>
            }
        </div>

        <form class="apprentice-approvals-form js-disable-on-submit" type="post" asp-controller="CertificateApprovals"  asp-action="Approvals">
            @Html.HiddenFor(c => c.Id)
            @Html.HiddenFor(c => c.CertificateDetailApprovalViewModels)
           
            <button type="submit" class="button">Submit</button>
        </form>
    </div>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    @{ await Html.RenderPartialAsync("~/Views/CertificateApprovals/_ApprovalsScriptsPartial.cshtml"); }
}
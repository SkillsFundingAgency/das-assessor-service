@model SFA.DAS.AssessorService.Web.Staff.ViewModels.Private.CertificateApprovalViewModel
@using SFA.DAS.AssessorService.Web.Staff


@{ ViewBag.Title = "Staff Dashboard"; }

<div>
    <nav class="app-navigation govuk-clearfix">
        <ul class="app-navigation__list">
            <li class="app-navigation--current-page">
                <a asp-controller="CertificateApprovals" asp-action="New">New</a>
            </li>
            <li class="app-navigation">
                <a asp-controller="CertificateApprovals" asp-action="SentForApproval">Sent For Approval</a>
            </li>
            <li class="app-navigation">
                <a asp-controller="CertificateApprovals" asp-action="Approved">Approved</a>
            </li>
            <li class="app-navigation">
                <a asp-controller="CertificateApprovals" asp-action="Rejected">Rejected</a>
            </li>
        </ul>
    </nav>
</div>

<div class="grid-row">

    <div class="column-full">

        <a class="link-back" asp-controller="Dashboard" asp-action="Index">Return to dashboard</a>

        @* hidden with css by default *@
        <div class="js-error-summary error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
            <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                There is a problem
            </h2>
            <ul class="js-error-summary-list error-summary-list"></ul>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                    There is a problem
                </h2>
                <ul class="error-summary-list">
                    @if (ViewData.ModelState.ErrorCount > 1)
                    {
                        <li>Please enter reasons for @ViewData.ModelState.ErrorCount rejections! </li>
                    }
                    else
                    {
                        <li>Please enter a reason for the rejection! </li>
                    }
                </ul>
            </div>
        }

        <div sfa-anyvalidationerror-class="after-error-summary">
            <h1 class="heading-large">
                Privately Funded Certificates - New
            </h1>

            @if (@Model.ToBeApprovedCertificates.Items.Any())
            {
                <div class="form-group">
                    <form asp-controller="CertificateApprovals" asp-action="ExportSentForApproval" method="post">
                        <input type="hidden" name="status" id="status" value="ToBeApproved" />
                        <input type="hidden" name="privateFundingStatus" id="privateFundingStatus" value=""/>
                        <button type="submit" class="button">Export</button>
                    </form>
                </div>
            }

            <form  class="apprentice-approvals-form js-disable-on-submit" asp-controller="CertificateApprovals" asp-action="Approvals">

                @if (@Model.ToBeApprovedCertificates.Items.Any())
                {
                    await Html.RenderPartialAsync("_ApprovalsDetailsPartial", Model.ToBeApprovedCertificates, new ViewDataDictionary(ViewData)
                        {
                            {
                                "Increment", 0
                            },
                            { "ApprovalResults", Model.ToBeApproveResults() },
                            { "PageIndex", @Model.ToBeApprovedCertificates.PageIndex },
                            {"ActionHint","SentForApproval" }
                        });
                    <button type="submit" class="button" role="button" id="submit-approval">Submit</button>
                }
                else
                {
                    <div class="info-summary">
                        <h3 class="heading-medium">No new privately funded certificates found</h3>
                    </div>
                }
            </form>
        </div>
    </div>
</div>
@{
    await Html.RenderPartialAsync("_ApprovalPaginationLinks", new ViewDataDictionary(ViewData)
{
{"PageIndex", Model.ToBeApprovedCertificates.PageIndex},
{"TotalPages", Model.ToBeApprovedCertificates.TotalPages },
{"HasPreviousPage", Model.ToBeApprovedCertificates.HasPreviousPage},
{"HasNextPage", Model.ToBeApprovedCertificates.HasNextPage},
{"Action","New" }
});
}

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    @{ await Html.RenderPartialAsync("~/Views/CertificateApprovals/_ApprovalsScriptsPartial.cshtml"); }

}
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using SFA.DAS.AssessorService.Domain.Consts;
@using SFA.DAS.AssessorService.Domain.Paging
@model SFA.DAS.AssessorService.Domain.Paging.PaginatedList<SFA.DAS.AssessorService.Web.Staff.ViewModels.Private.CertificateDetailApprovalViewModel>
@{
    var results = Model.Items.ToList();
    var approvalresults = ViewData["ApprovalResults"] as SFA.DAS.AssessorService.Web.Staff.ViewModels.Private.CertificateDetailApprovalViewModel[];
    var actionHint = ViewData["ActionHint"] as string;
    var pageIndex = ViewData["PageIndex"] as int?;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <table class="govuk-table table-font-xsmall">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">Apprentice</th>
                    <th class="govuk-table__header" scope="col">ULN</th>
                    <th class="govuk-table__header" scope="col">Employer</th>
                    <th class="govuk-table__header" scope="col">Training Provider</th>
                    @if (results[0]?.PrivatelyFundedStatus == CertificateStatus.Rejected)
                    {
                        <th class="govuk-table__header" scope="col">Reason For Rejection</th>
                    }
                    @if (results[0]?.PrivatelyFundedStatus != CertificateStatus.SentForApproval)
                    {
                        <th class="govuk-table__header" scope="col">Date Requested</th>
                    }
                    else
                    {
                        <th class="govuk-table__header" scope="col">Date Sent For Approval</th>
                    }
                    @if (results[0]?.PrivatelyFundedStatus != CertificateStatus.Approved)
                    {
                        <th class="govuk-table__header" scope="col">Action</th>
                    }
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @for (int i = 0; i < results.Count; i++)
                {
                    @:<tr class="govuk-table__row">
                        <td class="govuk-table__cell das-no-wrap" data-label="Apprentice">
                            <div role="button" tabindex="0" class="js-expand-table-row expand-table-row" data-expand-id="@results[i].Uln"><i class="arrow arrow-closed">►</i> <span>@results[i].FullName</span></div>
                        </td>
                        <td class="govuk-table__cell" data-label="ULN">@results[i].Uln</td>
                        <td class="govuk-table__cell" data-label="Employer">@results[i].ContactOrganisation</td>
                        <td class="govuk-table__cell" data-label="Training Provider">@results[i].Ukprn</td>
                        if (results[0]?.PrivatelyFundedStatus == CertificateStatus.Rejected)
                        {
                            <td class="govuk-table__cell" data-label="Reason For Rejection">@results[i].ReasonForChange</td>
                        }
                        if (results[0]?.PrivatelyFundedStatus != CertificateStatus.SentForApproval)
                        {
                            <td class="govuk-table__cell" data-label="Date Requested">@results[i].CreatedDay.ToString("dd/MM/yyyy")</td>
                        }
                        else
                        {
                            <td class="govuk-table__cell" data-label="Date Sent For Approval">@results[i].UpdatedAt?.ToString("dd/MM/yyyy")</td>
                        }


                        if (approvalresults != null)
                        {
                            approvalresults[i].IsApproved = results[i].IsApproved;
                            if (results[i].PrivatelyFundedStatus != CertificateStatus.Approved)
                            {
                                var radioId = string.Empty;
                                if (results[0]?.PrivatelyFundedStatus != CertificateStatus.Rejected)
                                {
                                    radioId = "td-with-radios";
                                }
                                <td class="govuk-table__cell" id="@radioId" data-label="Action">
                                    <div class="govuk-radios govuk-radios--inline">
                                        @if (results[i].PrivatelyFundedStatus == null)
                                        {

                                            <div class="govuk-radios__item">
                                                <input class="govuk-radios__input js-expand-table-row-for-radio" asp-for=@approvalresults[i].IsApproved type="radio" value="ToBeApproved" data-hide="true" data-expand-id="@approvalresults[i].IsApproved">
                                                <label class="govuk-label govuk-radios__label" asp-for=@approvalresults[i].IsApproved>Send</label>
                                            </div>
                                            <div class="govuk-radios__item">
                                                <input class="govuk-radios__input js-expand-table-row-for-radio" asp-for=@approvalresults[i].IsApproved type="radio" value="Draft" data-expand-id="@approvalresults[i].IsApproved">
                                                <label class="govuk-label govuk-radios__label" asp-for=@approvalresults[i].IsApproved>Reject</label>
                                            </div>
                                        }
                                        else if (results[i].PrivatelyFundedStatus == CertificateStatus.SentForApproval)
                                        {
                                            <div class="govuk-radios__item">
                                                <input class="govuk-radios__input js-expand-table-row-for-radio" asp-for=@approvalresults[i].IsApproved type="radio" value="Submitted" data-hide="true" data-expand-id="@approvalresults[i].IsApproved">
                                                <label class="govuk-label govuk-radios__label" asp-for=@approvalresults[i].IsApproved>Approve</label>
                                            </div>
                                            <div class="govuk-radios__item">
                                                <input class="govuk-radios__input js-expand-table-row-for-radio" asp-for=@approvalresults[i].IsApproved data-expand-id="@approvalresults[i].IsApproved" type="radio" value="Draft">
                                                <label class="govuk-label govuk-radios__label" asp-for=@approvalresults[i].IsApproved>Reject</label>
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                <a class="govuk-link" asp-action="Check" asp-controller="CertificateAmend" asp-route-certificateId="@results[i].CertificateId" asp-route-stdcode="@results[i].StandardCode" asp-route-uln="@results[i].Uln" asp-route-searchstring="@results[i].Uln" asp-route-fromapproval="true">Amend</a>
                                            </div>
                                        }
                                    </div>
                                </td>
                            }

                        @:</tr>


                        {
                            approvalresults[i].CertificateReference = results[i].CertificateReference;
                            approvalresults[i].PrivatelyFundedStatus = results[i].PrivatelyFundedStatus;

                        }

                        @Html.HiddenFor(x => @approvalresults[i].CertificateReference)
                        @Html.HiddenFor(x => @approvalresults[i].IsApproved)
                        @Html.HiddenFor(x => @approvalresults[i].PrivatelyFundedStatus)

                    }
                    @Html.HiddenFor(x => @actionHint)
                    ;
                    @Html.HiddenFor(x => @pageIndex)
                    ;
                    var hidden = "js-hidden";
                    var modelStateVal = ViewData.ModelState["approvalresults[" + i + "].ReasonForChange"];
                    if (modelStateVal?.ValidationState == ModelValidationState.Invalid)
                    {
                        hidden = "";
                    }

                    <tr class="govuk-table__row js-expandble-cell-for-radio @hidden" aria-hidden="true">
                        <td class="govuk-table__cell" colspan="6">
                            <div class="expandble-cell-content">
                                <div class="govuk-form-group" sfa-validation-for="@approvalresults[i].ReasonForChange" sfa-validationerror-class="form-group-error">
                                    <label class="govuk-label" for="@approvalresults[i].ReasonForChange">
                                        Reason for rejection
                                    </label>
                                    <span class="govuk-hint">Can you provide more detail as to why this certificate is rejected.</span>
                                    <span id="more-detail-hint" class="govuk-error-message" asp-validation-for="@approvalresults[i].ReasonForChange"></span>

                                    <textarea class="govuk-textarea" id="more-detail" rows="6" sfa-validation-for="@approvalresults[i].ReasonForChange" sfa-validationerror-class="form-control-error" asp-for=@approvalresults[i].ReasonForChange></textarea>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr class="govuk-table__row js-expandble-cell expandble-cell expandble-cell--hidden" aria-hidden="true">
                        <td class="govuk-table__cell" colspan="5">
                            <div class="expandble-cell-content">
                                <h2 class="govuk-heading-m expandble-cell-content--first-heading">Certificate details</h2>
                                <dl class="govuk-summary-list">
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Recorded by
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @Html.DisplayFor(modelItem => @results[i].RecordedBy)
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Standard
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @Html.DisplayFor(modelItem => @results[i].StandardName)
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Level
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @Html.DisplayFor(modelItem => @results[i].Level)
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Grade
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @Html.DisplayFor(modelItem => @results[i].OverallGrade)
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Option
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @if (results[i].CourseOption != null) {
                                                @Html.DisplayFor(modelItem => @results[i].CourseOption)
                                            }
                                            else
                                            {
                                                <text>None</text>
                                            }
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Apprenticeship start date
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @{
                                                var achievementStartDate = @results[i].LearningStartDate.HasValue ? @results[i].LearningStartDate.Value.ToString("dd/MM/yyyy") : "";
                                            }
                                            @achievementStartDate
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Achievement date
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @{
                                                var achievementDate = @results[i].AchievementDate.HasValue ? @results[i].AchievementDate.Value.ToString("dd/MM/yyyy") : "";
                                            }
                                            @achievementDate
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            Certificate number
                                        </dt>
                                        <dd class="govuk-summary-list__value">
                                            @Html.DisplayFor(modelItem => @results[i].CertificateReference)
                                        </dd>
                                    </div>
                                </dl>

                                @if (results[i].ContactPostCode != null)
                                {
                                    <h2 class="govuk-heading-m">Postage details</h2>
                                    <p class="govuk-body">
                                        The certificate was posted to this address.
                                    </p>
                                    <ul class="govuk-list">
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactName)
                                        </li>
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactOrganisation)
                                        </li>
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactAddLine1)
                                        </li>
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactAddLine2)
                                        </li>
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactAddLine3)
                                        </li>
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactAddLine4)
                                        </li>
                                        <li>
                                            @Html.DisplayFor(modelItem => @results[i].ContactPostCode)
                                        </li>
                                    </ul>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
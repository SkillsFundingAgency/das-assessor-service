@using Microsoft.AspNetCore.Mvc.ModelBinding
@using SFA.DAS.AssessorService.Domain.Consts;
@using SFA.DAS.AssessorService.Domain.Paging
@model SFA.DAS.AssessorService.Domain.Paging.PaginatedList<SFA.DAS.AssessorService.Web.Staff.ViewModels.Private.CertificateDetailApprovalViewModel>
@{
    var results = Model.Items.ToList();
    var approvalresults = ViewData["ApprovalResults"] as SFA.DAS.AssessorService.Web.Staff.ViewModels.Private.CertificateDetailApprovalViewModel[];
    var actionHint = ViewData["ActionHint"] as string;
    var pageIndex = ViewData["PageIndex"] as int?;
}
<table class="table responsive table-font-xsmall table-spaced">
    <thead>
        <tr>
            <th>Apprentice</th>
            <th>ULN</th>
            <th>Employer</th>
            <th>Training Provider</th>
            @if (results[0]?.PrivatelyFundedStatus == CertificateStatus.Rejected)
            {
            <th>Reason For Rejection</th>
            }
            @if (results[0]?.PrivatelyFundedStatus != CertificateStatus.SentForApproval)
            {
                <th>Date Requested</th>
            }
            else
            {
                <th>Date Sent For Approval</th>
            }
            @if (results[0]?.PrivatelyFundedStatus != CertificateStatus.Approved)
            {
                <th>Action</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < results.Count; i++)
        {
            @:<tr>
            <td data-label="Apprentice" class="nowrap">
                <div role="button" tabindex="0" class="js-expand-table-row expand-table-row" data-expand-id="@results[i].Uln"><i class="arrow arrow-closed">►</i> <span>@results[i].FullName</span></div>
            </td>
            <td data-label="ULN">@results[i].Uln</td>
            <td data-label="Employer">@results[i].ContactOrganisation</td>
            <td data-label="Training Provider">@results[i].Ukprn</td>
            if (results[0]?.PrivatelyFundedStatus == CertificateStatus.Rejected)
            {
                <td data-label="Reason For Rejection">@results[i].ReasonForChange</td>
            }
            if (results[0]?.PrivatelyFundedStatus != CertificateStatus.SentForApproval)
            {
                <td data-label="Date Requested">@results[i].CreatedDay.ToString("dd/MM/yyyy")</td>
            }
            else
            {
                <td data-label="Date Sent For Approval">@results[i].UpdatedAt?.ToString("dd/MM/yyyy")</td>
            }


            if (approvalresults != null)
            {
                approvalresults[i].IsApproved = results[i].IsApproved;
                if (results[i].PrivatelyFundedStatus != CertificateStatus.Approved)
                {
                    var radioId = string.Empty;
                    if (results[0]?.PrivatelyFundedStatus != CertificateStatus.Rejected)
                    {
                        radioId = "td-with-radios";
                    }
                    <td id="@radioId" data-label="Action">
                        <fieldset class="inline">
                            @if (results[i].PrivatelyFundedStatus == null)
                            {

                                <div class="multiple-choice">
                                    <input asp-for=@approvalresults[i].IsApproved type="radio" value="ToBeApproved" data-hide="true" class="js-expand-table-row-for-radio" data-expand-id="@approvalresults[i].IsApproved">
                                    <label asp-for=@approvalresults[i].IsApproved>Send</label>
                                </div>
                                <div class="multiple-choice">
                                    <input asp-for=@approvalresults[i].IsApproved type="radio" value="Draft" class="js-expand-table-row-for-radio" data-expand-id="@approvalresults[i].IsApproved">
                                    <label asp-for=@approvalresults[i].IsApproved>Reject</label>
                                </div>
                            }
                            else if (results[i].PrivatelyFundedStatus == CertificateStatus.SentForApproval)
                            {
                                <div class="multiple-choice">
                                    <input asp-for=@approvalresults[i].IsApproved type="radio" value="Submitted" data-hide="true" class="js-expand-table-row-for-radio" data-expand-id="@approvalresults[i].IsApproved">
                                    <label asp-for=@approvalresults[i].IsApproved>Approve</label>
                                </div>
                                <div class="multiple-choice">
                                    <input asp-for=@approvalresults[i].IsApproved class="js-expand-table-row-for-radio" data-expand-id="@approvalresults[i].IsApproved" type="radio" value="Draft">
                                    <label asp-for=@approvalresults[i].IsApproved>Reject</label>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <a asp-action="Check" asp-controller="CertificateAmend" asp-route-certificateId="@results[i].CertificateId" asp-route-stdcode="@results[i].StandardCode" asp-route-uln="@results[i].Uln" asp-route-searchstring="@results[i].Uln" asp-route-fromapproval="true">Amend</a>
                                </div>
                            }
                        </fieldset>
                    </td>
                }

                @:</tr>


                {
                    approvalresults[i].CertificateReference = results[i].CertificateReference;
                    approvalresults[i].PrivatelyFundedStatus = results[i].PrivatelyFundedStatus;

                }

                @Html.HiddenFor(x => @approvalresults[i].CertificateReference)
                @Html.HiddenFor(x => @approvalresults[i].IsApproved)
                @Html.HiddenFor(x => @approvalresults[i].PrivatelyFundedStatus)

            }
            @Html.HiddenFor(x => @actionHint)
            ;
            @Html.HiddenFor(x => @pageIndex)
            ;
            var hidden = "js-hidden";
            var modelStateVal = ViewData.ModelState["approvalresults[" + i + "].ReasonForChange"];
            if (modelStateVal?.ValidationState == ModelValidationState.Invalid)
            {
                hidden = "";
            }

            <tr class="js-expandble-cell-for-radio @hidden" aria-hidden="true">
                <td colspan="6">
                    <div class="expandble-cell-content">
                        <div class="form-group" sfa-validation-for="@approvalresults[i].ReasonForChange" sfa-validationerror-class="form-group-error">
                            <label for="@approvalresults[i].ReasonForChange">
                                <span class="form-label-bold">Reason for rejection</span>
                                <span class="form-hint">Please could you provide more detail as to why this certificate is rejected.</span>
                                <span class="error-message" asp-validation-for="@approvalresults[i].ReasonForChange"></span>
                            </label>
                            <textarea class="form-control form-control-3-4" rows="6" sfa-validation-for="@approvalresults[i].ReasonForChange" sfa-validationerror-class="form-control-error" asp-for=@approvalresults[i].ReasonForChange></textarea>
                        </div>
                    </div>
                </td>
            </tr>
            <tr class="js-expandble-cell js-hidden expandble-cell" aria-hidden="true">
                <td colspan="5">
                    <div class="expandble-cell-content">
                        <h2 class="heading-medium expandble-cell-content--first-heading">Certificate Details</h2>
                        <ul>
                            <li>
                                <p>
                                    <span class="bold">Recorded by: </span> @Html.DisplayFor(modelItem => @results[i].RecordedBy)
                                </p>
                            </li>
                            <li>
                                <p>
                                    <span class="bold">Standard: :</span> @Html.DisplayFor(modelItem => @results[i].StandardName)
                                </p>
                            </li>
                            <li>
                                <p>
                                    <span class="bold">Level: </span> @Html.DisplayFor(modelItem => @results[i].Level)
                                </p>
                            </li>
                            <li>
                                <p>
                                    <span class="bold">Grade: </span> @Html.DisplayFor(modelItem => @results[i].OverallGrade)
                                </p>
                            </li>

                            <li>
                                <p>
                                    <span class="bold">Option: </span> @Html.DisplayFor(modelItem => @results[i].CourseOption)
                                </p>
                            </li>
                            <li>
                                <p>
                                    <span class="bold">Apprenticeship start date: </span>
                                    @{
                                        var achievementStartDate = @results[i].LearningStartDate.HasValue ? @results[i].LearningStartDate.Value.ToString("dd/MM/yyyy") : "";
                                    }
                                    @achievementStartDate
                                </p>
                            </li>
                            <li>
                                <p>
                                    <span class="bold">Achievement date: </span>
                                    @{
                                        var achievementDate = @results[i].AchievementDate.HasValue ? @results[i].AchievementDate.Value.ToString("dd/MM/yyyy") : "";
                                    }
                                    @achievementDate
                                </p>
                            </li>
                            <li>
                                <p>
                                    <span class="bold">Certificate number:</span> @Html.DisplayFor(modelItem => @results[i].CertificateReference)
                                </p>
                            </li>
                        </ul>

                        <h2 class="heading-medium">Postage details: </h2>
                        <p>
                            The certificate was posted to this address.
                        </p>
                        <ul>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactName)
                            </li>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactOrganisation)
                            </li>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactAddLine1)
                            </li>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactAddLine2)
                            </li>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactAddLine3)
                            </li>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactAddLine4)
                            </li>
                            <li>
                                @Html.DisplayFor(modelItem => @results[i].ContactPostCode)
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
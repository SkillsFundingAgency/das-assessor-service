@using SFA.DAS.AssessorService.Domain.Extensions;
@using SFA.DAS.AssessorService.Api.Types.Models.Staff;
@model BatchSearchViewModel<StaffBatchLogResult>
@{
    ViewBag.Title = "Batch search";
    Layout = "_Layout";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <a asp-action="Index" asp-controller="Dashboard" class="link-back">Return to dashboard</a>
        <form asp-action="Results" asp-controller="BatchSearch" method="get">
            @Html.HiddenFor(m => m.Page)
            <div class="form-group">
                <h1>
                    <label class="form-label" for="SearchString">
                        <span class="heading-xlarge">Batch search</span>
                        <span class="form-hint">Search by batch number</span>
                    </label>
                </h1>
                <input class="form-control" asp-for="BatchNumber" type="number" />
            </div>
            <button class="button" type="submit">Search</button>
        </form>
    </div>
</div>

@if (@Model.PaginatedList.TotalRecordCount > 0)
{
    <div class="grid-row">
        <div class="column-full">
            <h2 class="heading-large">Current batches</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Batch</th>
                        <th>Scheduled date</th>
                        <th>Certificates</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var result in Model.PaginatedList.Items)
                    {
                        <tr>
                            <td>@result.BatchNumber</td>
                            <td>@result.ScheduledDate.UtcToTimeZoneTime()</td>
                            <td>@result.NumberOfCertificates</td>
                            <td><a asp-controller="BatchSearch" asp-action="Results" asp-route-batchNumber="@result.BatchNumber">View</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@if (Model.PaginatedList.HasPreviousPage || Model.PaginatedList.HasNextPage)
{
    <div class="grid-row">
        <div class="column-full">
            <div class="page-navigation">

                @if (Model.PaginatedList.HasPreviousPage)
                {
                    <a asp-action="Index"
                       asp-controller="BatchSearch"
                       asp-route-batchNumber="@Model.BatchNumber"
                       asp-route-page="@( Model.PaginatedList.PageIndex - 1)"
                       class="previous">
                        <i class="arrow-button icon-left-open">&#xe800;</i>
                        <span class="description">Previous <span class="hide-mob">page</span></span>
                        <span class="counter">Page <span class="prevPage">@(Model.PaginatedList.PageIndex - 1)</span> of <span class="totalPage">@(Model.PaginatedList.TotalPages)</span></span>
                    </a>
                }

                @if (Model.PaginatedList.HasNextPage)
                {
                    <a asp-action="Index"
                       asp-controller="BatchSearch"
                       asp-route-batchNumber="@Model.BatchNumber"
                       asp-route-page="@( Model.PaginatedList.PageIndex + 1)"
                       class="next">
                        <i class="arrow-button icon-right-open">&#xe801;</i>
                        <span class="description">Next <span class="hide-mob">page</span></span>
                        <span class="counter">Page <span class="nextPage">@(Model.PaginatedList.PageIndex + 1)</span> of <span class="totalPage">@(Model.PaginatedList.TotalPages)</span></span>
                    </a>
                }

            </div>
        </div>
    </div>
}
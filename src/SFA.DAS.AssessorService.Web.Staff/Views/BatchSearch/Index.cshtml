@using SFA.DAS.AssessorService.Domain.Extensions;
@using SFA.DAS.AssessorService.Api.Types.Models.Staff;
@model BatchSearchViewModel<StaffBatchLogResult>
@{
    ViewBag.Title = "Batch search";
    Layout = "_Layout";
}

<a class="govuk-back-link" asp-action="Index" asp-controller="Dashboard">Return to dashboard</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form asp-action="Results" asp-controller="BatchSearch" method="get" novalidate>
                @Html.HiddenFor(m => m.Page)
                <div class="govuk-form-group">
                    <h1 class="govuk-label-wrapper">
                        <label class="govuk-label govuk-label--xl" for="SearchString">
                            Batch search
                        </label>
                    </h1>
                    <span class="govuk-hint">Search by batch number</span>
                    <input class="govuk-input govuk-input--width-10" asp-for="BatchNumber" type="number" />
                </div>
                <button class="govuk-button" type="submit">
                    Search
                </button>
            </form>
        </div>
    </div>

    @if (@Model.PaginatedList.TotalRecordCount > 0)
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <h2 class="govuk-heading-l">Current batches</h2>

                <table class="govuk-table">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th class="govuk-table__header">Batch</th>
                            <th class="govuk-table__header">Scheduled date</th>
                            <th class="govuk-table__header">Certificates</th>
                            <th class="govuk-table__header"></th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                        @foreach (var result in Model.PaginatedList.Items)
                        {
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">@result.BatchNumber</td>
                                <td class="govuk-table__cell">@result.ScheduledDate.UtcToTimeZoneTime()</td>
                                <td class="govuk-table__cell">@result.NumberOfCertificates</td>
                                <td class="govuk-table__cell"><a asp-controller="BatchSearch" asp-action="Results" asp-route-batchNumber="@result.BatchNumber">View</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    @if (Model.PaginatedList.HasPreviousPage || Model.PaginatedList.HasNextPage)
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="page-navigation">

                    @if (Model.PaginatedList.HasPreviousPage)
                    {
                        <a asp-action="Index"
                        asp-controller="BatchSearch"
                        asp-route-batchNumber="@Model.BatchNumber"
                        asp-route-page="@( Model.PaginatedList.PageIndex - 1)"
                        class="govuk-link previous">
                            <i class="arrow-button icon-left-open">&#xe800;</i>
                            <span class="description">Previous <span class="hide-mob">page</span></span>
                            <span class="counter">Page <span class="prevPage">@(Model.PaginatedList.PageIndex - 1)</span> of <span class="totalPage">@(Model.PaginatedList.TotalPages)</span></span>
                        </a>
                    }

                    @if (Model.PaginatedList.HasNextPage)
                    {
                        <a asp-action="Index"
                        asp-controller="BatchSearch"
                        asp-route-batchNumber="@Model.BatchNumber"
                        asp-route-page="@( Model.PaginatedList.PageIndex + 1)"
                        class="govuk-link next">
                            <i class="arrow-button icon-right-open">&#xe801;</i>
                            <span class="description">Next <span class="hide-mob">page</span></span>
                            <span class="counter">Page <span class="nextPage">@(Model.PaginatedList.PageIndex + 1)</span> of <span class="totalPage">@(Model.PaginatedList.TotalPages)</span></span>
                        </a>
                    }

                </div>
            </div>
        </div>
    }
</main>
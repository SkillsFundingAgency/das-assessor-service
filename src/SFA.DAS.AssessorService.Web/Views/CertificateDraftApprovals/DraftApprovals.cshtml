@model  SFA.DAS.AssessorService.Web.ViewModels.Certificate.CertificateApprovalViewModel

@{ ViewBag.Title = "Staff Dashboard"; }

@{ await Html.RenderPartialAsync("_SearchMenu"); }

<div class="grid-row">
    <div class="column-full">
        <form class="apprentice-approvals-form js-disable-on-submit" type="post" asp-controller="CertificateDraftApprovals" asp-action="CertificateDraftApprovals">
           

            @* hidden with css by default *@
            <div class="js-error-summary error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                    There's a problem
                </h2>
                <ul class="js-error-summary-list error-summary-list"></ul>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                    <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                        There's a problem
                    </h2>
                    <ul class="error-summary-list">

                    </ul>
                </div>
            }

            <div class="form-group">
                <h1 class="heading-xlarge">
                    Privately funded certificates
                </h1>              

                @{
                    var count = Model.DraftCertificates.Count();
                    var approvalResults =
                        new SFA.DAS.AssessorService.Web.ViewModels.Certificate.CertificateDetailApprovalViewModel[count];
                    for (int i = 0; i < count; i++)
                    {
                        approvalResults[i] = new SFA.DAS.AssessorService.Web.ViewModels.Certificate.CertificateDetailApprovalViewModel();
                    }
                }

                @if (@Model.DraftCertificates.Any())
                {
                    <h2 class="heading-medium">
                        Rejected Certificates
                    </h2>
                    await Html.RenderPartialAsync("_DraftApprovalsDetailsPartial", Model.DraftCertificates, new ViewDataDictionary(ViewData)
                    {
                        {"Increment", 0},
                        {"ApprovalResults", approvalResults}
                    });
                }
            </div>
            <button type="submit" class="button">Submit</button>
        </form>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    @{ await Html.RenderPartialAsync("~/Views/CertificateDraftApprovals/_DraftApprovalsScriptsPartial.cshtml"); }
}
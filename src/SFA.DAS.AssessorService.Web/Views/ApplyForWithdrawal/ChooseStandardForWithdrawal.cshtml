@model SFA.DAS.AssessorService.Web.ViewModels.ApplyForWithdrawal.ChooseStandardForWithdrawalViewModel;
@{
    ViewData["Title"] = "Apply for organisation withdrawal";
    Layout = "_DashboardLayout";
}
<a asp-action="Index" asp-controller="Dashboard" class="govuk-back-link">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is a problem
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list">
                    <li><a sfa-validation-for="SelectedStandardForWithdrawal"></a></li>
                </ul>
            </div>
        </div>
    }
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-xl">Choose a standard for withdrawal</h1>
        </div>
    </div>

    @if (Model.Standards.Items.Any())
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <form asp-action="ChooseStandardForWithdrawal" asp-controller="ApplyForWithdrawal" method="post">
                    <div class="govuk-form-group" sfa-validation-for="SelectedStandardForWithdrawal" sfa-validationerror-class="govuk-form-group--error">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
                                <h1 class="govuk-fieldset__heading">
                                    Choose
                                </h1>
                            </legend>
                            <sfa-validationerror-detail sfa-validation-for="SelectedStandardForWithdrawal" sfa-validationerror-class="govuk-error-message"></sfa-validationerror-detail>
                            <div class="govuk-radios">
                                @foreach (var item in Model.Standards.Items)
                                {
                                    <div class="govuk-radios__item">
                                        <input class="govuk-radios__input" id="withdrawal-standard" 
                                                name="SelectedStandardForWithdrawal"
                                                sfa-validation-for="SelectedStandardForWithdrawal"
                                                sfa-validationerror-class="govuk-input--error"
                                                asp-for="SelectedStandardForWithdrawal"
                                                type="radio" 
                                                value="@item.StandardCode">
                                        <label class="govuk-label govuk-radios__label" asp-for="SelectedStandardForWithdrawal">
                                            @item.StandardName
                                        </label>
                                    </div>
                                }
                            </div>
                        </fieldset>
                    </div>
                    <button class="govuk-button govuk-!-margin-top-4" data-module="govuk-button">
                        Continue
                    </button>
                </form>
            </div>
        </div>
    }
    else
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <div class="info-summary">
                    <h2 class="govuk-heading-m">You are not yet approved to assess any standards.</h2>
                </div>
            </div>
        </div>
    }

    @if (Model.Standards.HasPreviousPage || Model.Standards.HasNextPage)
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="page-navigation">

                    @if (Model.Standards.HasPreviousPage)
                    {
                        <a asp-action="Index"
                           asp-controller="OrganisationStandards"
                           asp-route-pageIndex="@(Model.Standards.PageIndex - 1)"
                           class="govuk-link previous">
                            <i class="arrow-button icon-left-open">&#xe800;</i>
                            <span class="description">Previous <span class="hide-mob">page</span></span>
                            <span class="counter">Page <span class="prevPage">@(Model.Standards.PageIndex - 1)</span> of <span class="totalPage">@(Model.Standards.TotalPages)</span></span>
                        </a>
                    }

                    @if (Model.Standards.HasNextPage)
                    {
                        <a asp-controller="ApplyForWithdrawal"
                           asp-action="ChooseStandardForWithdrawal"
                           asp-route-pageIndex="@(Model.Standards.PageIndex + 1)"
                           class="govuk-link next">
                            <i class="arrow-button icon-right-open">&#xe801;</i>
                            <span class="description">Next <span class="hide-mob">page</span></span>
                            <span class="counter">Page <span class="nextPage">@(Model.Standards.PageIndex + 1)</span> of <span class="totalPage">@(Model.Standards.TotalPages)</span></span>
                        </a>
                    }
                </div>
            </div>
        </div>
    }
</main>
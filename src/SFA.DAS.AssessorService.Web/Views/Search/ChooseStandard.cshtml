@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model SFA.DAS.AssessorService.Web.ViewModels.Search.ChooseStandardViewModel

@{
    ViewBag.Title = (!ViewData.ModelState.IsValid ? "Error: " : "") + "Choose an apprenticeship";
    Layout = "_Layout";
}


<div class="grid-row">
    <div class="column-two-thirds">
        <a class="link-back" asp-controller="Search" asp-action="Index">Back</a>
        
        <form class="apprentice-choose-standard-form" asp-controller="Search" asp-action="ChooseStandard" method="post">

            @* hidden with css by default *@
            <div class="js-error-summary error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                    @Localizer["ErrorsWithSubmission"]
                </h2>
                <ul class="js-error-summary-list error-summary-list"></ul>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                    <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                        @Localizer["ErrorsWithSubmission"]
                    </h2>
                    <ul class="error-summary-list">
                        <li><a sfa-validation-for="SelectedStandardCode"></a></li>
                    </ul>
                </div>
            }

            <fieldset sfa-anyvalidationerror-class="after-error-summary">
                <legend id="SelectedStandardCode">
                    <h1 class="heading-large">@Localizer["PageHeading"]</h1>
                    <p>@Localizer["PageDescription"]</p>
                    <ul class="list">
                        <li>
                            <p><span class="bold">Name:</span> @Model.SearchResults.First().GivenNames @Model.SearchResults.First().FamilyName</p>
                        </li>
                        <li>
                            <p><span class="bold">ULN:</span> @Model.SearchResults.First().Uln</p>
                        </li>
                    </ul>
                    <div class="error-message-container" sfa-validation-for="SelectedStandardCode" sfa-validationerror-class="form-group-error">
                        <span class="error-message" asp-validation-for="SelectedStandardCode"></span>
                    </div>
                </legend>

                <div class="form-group" sfa-validation-for="SelectedStandardCode" sfa-validationerror-class="form-group-error">
                    @if (Model.SearchResults.Any(sr => sr.CertificateReference == null))
                    {
                        <div class="form-block">
                            <span class="bold-medium">@Localizer["AssessmentsNotRecordedYet"]</span>     
                        </div>
                        @foreach (var result in Model.SearchResults.Where(sr => sr.CertificateReference == null))
                        {
                            <div class="multiple-choice">
                                <input id=@("standard_" + result.StdCode) type="radio" name="SelectedStandardCode" value="@result.StdCode">
                                <label for=@("standard_" + result.StdCode)>
                                    @result.Standard
                                </label>
                            </div>
                        }
                    }
                    @if (Model.SearchResults.Any(sr => sr.CertificateReference != null))
                    {
                        
                        <div class="form-block">
                            <span class="bold-medium">@Localizer["PreviouslyRecordedAssessments"]</span>
                        </div>
                        @foreach (var result in Model.SearchResults.Where(sr => sr.CertificateReference != null))
                        {
                            <div class="multiple-choice">
                                <input id=@("standard_" + result.StdCode) type="radio" name="SelectedStandardCode" value="@result.StdCode">
                                <label for=@("standard_" + result.StdCode)>
                                    @result.Standard
                                </label>
                            </div>
                        }
                    }
                </div>
            </fieldset>
            <div class="form-group">
                <button class="button" type="submit">@Localizer["SelectStandardButton"]</button>
            </div>
        </form>

        <p><a asp-controller="Search" asp-action="Index">Search again</a> if this isn’t the correct apprentice.</p>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    @{await Html.RenderPartialAsync("~/Views/Search/_ChooseStandardScriptsPartial.cshtml"); }
}
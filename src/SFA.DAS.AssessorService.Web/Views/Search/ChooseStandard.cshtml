@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model SFA.DAS.AssessorService.Web.ViewModels.Search.ChooseStandardViewModel

@{
    ViewBag.Title = "Confirm apprentice";
    Layout = "_Layout";
}


<div class="grid-row">
    <div class="column-two-thirds">
        <a class="link-back" asp-controller="Search" asp-action="Index">Back</a>
        <h1 class="heading-large">@Localizer["PageHeading"]</h1>
        <p>@Localizer["PageDescription"]</p>
        <form asp-controller="Search" asp-action="ChooseStandard" method="post">

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="error-summary" role="alert" aria-labelledby="error-summary-heading" tabindex="-1">
                    <h2 class="heading-medium error-summary-heading" id="error-summary-heading">
                        @Localizer["ErrorsWithSubmission"]
                    </h2>
                    <ul class="error-summary-list">
                        <li><a sfa-validation-for="SelectedStandardCode"></a></li>
                    </ul>
                </div>
            }
            <fieldset sfa-anyvalidationerror-class="after-error-summary">
                <div class="form-group" sfa-validation-for="SelectedStandardCode" sfa-validationerror-class="form-group-error">
                    <fieldset>
                        <ul>
                            <li>
                                <p><span class="bold">Name:</span> @Model.SearchResults.First().GivenNames @Model.SearchResults.First().FamilyName</p>
                            </li>
                            <li>
                                <p><span class="bold">ULN:</span> @Model.SearchResults.First().Uln</p>
                            </li>
                        </ul>
                        @if (Model.SearchResults.Any(sr => sr.CertificateReference == null))
                        {
                            <h1 class="heading-large">@Localizer["AssessmentsNotRecordedYet"]</h1>
                            foreach (var result in Model.SearchResults.Where(sr => sr.CertificateReference == null))
                            {
                                <div class="multiple-choice">
                                    <input id=@("standard_" + result.StdCode) type="radio" name="SelectedStandardCode" value="@result.StdCode">
                                    <label for=@("standard_" + result.StdCode)>
                                        @result.Standard
                                    </label>
                                </div>
                            }
                        }
                        @*This is why I shouldn't be allowed near Front-End dev. ;)*@
                        <br />
                        <br />
                        <br />
                        @if (Model.SearchResults.Any(sr => sr.CertificateReference != null))
                        {
                        <h1 class="heading-large">@Localizer["PreviouslyRecordedAssessments"]</h1>
                            foreach (var result in Model.SearchResults.Where(sr => sr.CertificateReference != null))
                            {
                                <div class="multiple-choice">
                                    <input id=@("standard_" + result.StdCode) type="radio" name="SelectedStandardCode" value="@result.StdCode">
                                    <label for=@("standard_" + result.StdCode)>
                                        @result.Standard
                                    </label>
                                </div>
                            }
                        }
                    </fieldset>
                </div>
            </fieldset>
            <div class="form-group">
                <button class="button" type="submit">@Localizer["SelectStandardButton"]</button>
            </div>
        </form>

        <p>This is not the right apprentice. <a asp-controller="Search" asp-action="Index">Search again</a></p>
    </div>
</div>


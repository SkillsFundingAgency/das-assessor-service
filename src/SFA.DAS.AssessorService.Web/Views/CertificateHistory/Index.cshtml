@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@model SFA.AssessorService.Paging.PaginatedList<SFA.DAS.AssessorService.Api.Types.Models.Certificates.CertificateHistoryResponse>

@{
    //ViewBag.Title = (Model?.SearchResults != null && !Model.SearchResults.Any() ? "0 results found: " : !ViewData.ModelState.IsValid ? "Error: " : "") + "Search for an apprentice";
    Layout = "_Layout";
}
<div class="grid-row">
    <div class="column-two-thirds">
        <!-- <a class="link-back" asp-controller="Search" asp-action="Index">Back</a> -->
        <div>
            @{await Html.RenderPartialAsync("_SearchNavigation"); }
        </div>

        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Localizer["Apprentice"]                           
                        </th>
                        <th>
                            @Localizer["ULN"]                              
                        </th>
                        <th>
                            @Localizer["Employer"]                             
                        </th>
                        <th>
                            @Localizer["TrainingProvider"]                                
                        </th>
                        <th>
                            @Localizer["DateRequested"]                             
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Uln)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContactOrganisation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TrainingProvider)
                            </td>
                            <td>
                                @item.CreatedAt.ToString("dd/MM/yyyy") 
                            </td>
                        </tr>
                        <tr>
                            <td colspan="5">
                                <h2 class="heading-medium error-summary-heading">@Localizer["AssessmentDetails"]</h2>
                                <ul>
                                    <li>
                                        <p><span class="bold">@Localizer["RecordedBy"]:</span> @Html.DisplayFor(modelItem => item.RecordedBy)</p>
                                    </li>
                                    <li>
                                        <p><span class="bold">@Localizer["Standard"]:</span> @Html.DisplayFor(modelItem => item.StandardName)</p>
                                    </li>
                                    <li>
                                        <p><span class="bold">@Localizer["Grade"]:</span> @Html.DisplayFor(modelItem => item.OverallGrade)</p>
                                    </li>

                                    <li>
                                        <p><span class="bold">@Localizer["Option"]:</span> @Html.DisplayFor(modelItem => item.CourseOption)</p>
                                    </li>
                                    <li>
                                        <p>
                                            <span class="bold">@Localizer["AchievementStartDate"]:</span>
                                            @{
                                                var achievementStartDate = item.LearningStartDate.HasValue ? item.LearningStartDate.Value.ToString("dd/MM/yyyy") : "";
                                            }
                                            @achievementStartDate
                                        </p>
                                    </li>
                                    <li>
                                        <p>
                                            <span class="bold">@Localizer["AchievementDate"]:</span>
                                            @{
                                                var achievementDate = item.AchievementDate.HasValue ? item.AchievementDate.Value.ToString("dd/MM/yyyy") : "";
                                            }
                                            @achievementDate
                                        </p>
                                    </li>
                                    <li>
                                        <p><span class="bold">@Localizer["CertificateNumber"]:</span> @Html.DisplayFor(modelItem => item.CertificateReference)</p>
                                    </li>
                                </ul>

                                <h2 class="heading-medium error-summary-heading">@Localizer["PostageDetails"]</h2>
                                <p>
                                    <i>The certificate was posted to this address</i>
                                </p>
                                <ul>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactName)</p>
                                    </li>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactOrganisation)</p>
                                    </li>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactAddLine1)</p>
                                    </li>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactAddLine2)</p>
                                    </li>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactAddLine3)</p>
                                    </li>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactAddLine4)</p>
                                    </li>
                                    <li>
                                        <p>@Html.DisplayFor(modelItem => item.ContactPostCode)</p>
                                    </li>
                                </ul>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="grid-row">
        <div class="column-two-thirds">
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-controller="CertificateHistory"
               asp-route-pageIndex="@(Model.PageIndex - 1)"
               class="button @prevDisabled">
                @Localizer["Previous"]
            </a>
            &nbsp;
            <a asp-controller="CertificateHistory"
               asp-action="Index"
               asp-route-pageIndex="@(Model.PageIndex + 1)"
               class="button @nextDisabled">
                @Localizer["Next"]
            </a>
        </div>
    </div>
</div>





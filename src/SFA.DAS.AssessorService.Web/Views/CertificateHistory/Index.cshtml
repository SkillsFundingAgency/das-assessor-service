@using SFA.DAS.AssessorService.Domain.Consts
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@using SFA.DAS.AssessorService.Api.Types.Models
@using SFA.DAS.AssessorService.Api.Types.Models.Certificates
@using SFA.DAS.AssessorService.Domain.Extensions
@model SFA.DAS.AssessorService.Web.ViewModels.Certificate.CertificateHistoryViewModel

@{
    ViewBag.Title = "Completed assessments";
    ViewBag.ZenDeskLabel = "ass-certificate-history";
    Layout = "_DashboardLayout";
}

<main class="govuk-main-wrapper " id="main-content" role="main">


    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form asp-action="Search" asp-controller="CertificateHistory" method="get">
                <h1 class="govuk-heading-xl">Completed assessments</h1>
                <h2 class="govuk-heading-l govuk-!-margin-bottom-1">Search</h2>

                <div class="das-icon-search das-icon-search--on-white" data-module="gem-toggle-input-class-on-focus">
                    <span id="search-term-hint" class="govuk-hint">
                        Search for apprentices by name, ULN or by certificate number
                    </span>
                    <div class="das-icon-search__item-wrapper">
                        <input type="search" asp-for="SearchTerm" id="search-term" class="das-icon-search__item das-icon-search__input js-class-toggle">
                        <div class="das-icon-search__item das-icon-search__submit-wrapper">
                            <button type="submit" class="das-icon-search__submit" id="search">Search</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            @if (Model.Certificates.Items.Any())
            {
                <table class="govuk-table govuk-table--small responsive">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">

                            <th scope="col" class="govuk-table__header">
                                <sfa-sortable-column-header class="approved-sort govuk-link"
                                                            data-sortColumn="@nameof(GetCertificateHistoryRequest.SortColumns.Apprentice)"
                                                            asp-action="SortCertificateHistory"
                                                            asp-controller="CertificateHistory"
                                                            sfa-sort-column="@nameof(GetCertificateHistoryRequest.SortColumns.Apprentice)"
                                                            sfa-table-sort-column="@Model.SortColumn"
                                                            sfa-sort-direction="@Model.SortDirection">
                                    @Localizer["Apprentice"]
                                </sfa-sortable-column-header>
                            </th>
                            <th class="govuk-table__header" scope="col">
                                @Localizer["ULN"]
                            </th>

                            <th scope="col" class="govuk-table__header">
                                <sfa-sortable-column-header class="approved-sort govuk-link"
                                                            data-sortColumn="@nameof(GetCertificateHistoryRequest.SortColumns.Employer)"
                                                            asp-action="SortCertificateHistory"
                                                            asp-controller="CertificateHistory"
                                                            sfa-sort-column="@nameof(GetCertificateHistoryRequest.SortColumns.Employer)"
                                                            sfa-table-sort-column="@Model.SortColumn"
                                                            sfa-sort-direction="@Model.SortDirection">
                                    @Localizer["Employer"]
                                </sfa-sortable-column-header>
                            </th>

                            <th scope="col" class="govuk-table__header">
                                <sfa-sortable-column-header class="approved-sort govuk-link"
                                                            data-sortColumn="@nameof(GetCertificateHistoryRequest.SortColumns.ProviderName)"
                                                            asp-action="SortCertificateHistory"
                                                            asp-controller="CertificateHistory"
                                                            sfa-sort-column="@nameof(GetCertificateHistoryRequest.SortColumns.ProviderName)"
                                                            sfa-table-sort-column="@Model.SortColumn"
                                                            sfa-sort-direction="@Model.SortDirection">
                                    @Localizer["TrainingProvider"]
                                </sfa-sortable-column-header>
                            </th>
                            <th scope="col" class="govuk-table__header govuk-table__header--numeric govuk-!-width-one-fifth">
                                <sfa-sortable-column-header class="approved-sort govuk-link"
                                                            data-sortColumn="@nameof(GetCertificateHistoryRequest.SortColumns.DateRequested)"
                                                            asp-action="SortCertificateHistory"
                                                            asp-controller="CertificateHistory"
                                                            sfa-sort-column="@nameof(GetCertificateHistoryRequest.SortColumns.DateRequested)"
                                                            sfa-table-sort-column="@Model.SortColumn"
                                                            sfa-sort-direction="@Model.SortDirection">
                                    @Localizer["DateRequested"]
                                </sfa-sortable-column-header>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                        @foreach (var item in Model.Certificates.Items)
                        {
                            <tr>
                                <td data-label="@Localizer["Apprentice"]" class="govuk-table__cell das-no-wrap">
                                    <div role="button" tabindex="0" class="js-expand-table-row expand-table-row" data-expand-id="@Html.DisplayFor(modelItem => item.Uln)"><i class="arrow arrow-closed">►</i> <span>@Html.DisplayFor(modelItem => item.FullName)</span></div>
                                </td>
                                <td class="govuk-table__cell" data-label="@Localizer["ULN"]">
                                    @Html.DisplayFor(modelItem => item.Uln)
                                </td>
                                <td class="govuk-table__cell" data-label="@Localizer["Employer"]">
                                    @Html.DisplayFor(modelItem => item.ContactOrganisation)
                                </td>
                                <td class="govuk-table__cell das-no-wrap" data-label="@Localizer["TrainingProvider"]">
                                    @Html.DisplayFor(modelItem => item.TrainingProvider)
                                </td>
                                <td class="govuk-table__cell govuk-table__cell--numeric" data-label="@Localizer["DateRequested"]">
                                    @item.CreatedAt.ToString("dd/MM/yyyy")
                                </td>
                            </tr>
                            <tr class="js-expandble-cell expandble-cell expandble-cell--hidden" aria-hidden="true">
                                <td class="govuk-table__cell" colspan="5">
                                    <div class="expandble-cell-content">
                                        <h2 class="govuk-heading-m expandble-cell-content--first-heading">@Localizer["AssessmentDetails"]</h2>
                                        <dl class="govuk-summary-list govuk-summary-list--no-border">
                                            <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">@Localizer["RecordedBy"]</dt>
                                            <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.RecordedBy)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Standard"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.StandardName)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Level"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.Level)</dd>
                                    </div>
                                    @if (!string.IsNullOrEmpty(item.Version))
                                    {
                                        <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">@Localizer["Version"]</dt>
                                            <dd class="govuk-summary-list__value">
                                                @Html.DisplayFor(modelItem => item.Version)
                                            </dd>
                                        </div>
                                    }
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Grade"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.OverallGrade)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Option"]</dt>
                                        <dd class="govuk-summary-list__value">
                                            @if (item.CourseOption != null)
                                            {
                                                @Html.DisplayFor(modelItem => item.CourseOption)
                                            }
                                            else
                                            {
                                                <text>None</text>
                                            }
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["AchievementStartDate"]</dt>
                                        @{
                                            var achievementStartDate = item.LearningStartDate.HasValue ? item.LearningStartDate.Value.ToString("dd/MM/yyyy") : "";
                                        }
                                        <dd class="govuk-summary-list__value">@achievementStartDate</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            @if (item.OverallGrade == CertificateGrade.Fail)
                                            {
                                                @Localizer["FailDate"]
                                            }
                                            else
                                            {
                                                @Localizer["AchievementDate"]
                                            }
                                        </dt>
                                        @{
                                            var achievementDate = item.AchievementDate.HasValue ? item.AchievementDate.Value.ToString("dd/MM/yyyy") : "";
                                        }
                                        <dd class="govuk-summary-list__value">@achievementDate</dd>
                                    </div>

                                    </dl>

                                    @if (Model.CanShowCertificateDetails(item))
                                    {
                                        <h2 class="govuk-heading-m">@Localizer["LatestCertificateDetails"]</h2>

                                        <dl class="govuk-summary-list govuk-summary-list--no-border">
                                            <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">
                                                @if (item.OverallGrade == CertificateGrade.Fail)
                                                {
                                                    @Localizer["ReferenceNumber"]
                                                }
                                                else
                                                {
                                                    @Localizer["CertificateNumber"]
                                                }
                                            </dt>
                                            <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.CertificateReference)</dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @Localizer["CertificateStatus"]
                        </dt>
                        <dd class="govuk-summary-list__value">
                            <text>@CertificateStatus.GetDisplayName(item.Status)</text>
                        </dd>
                    </div>

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @CertificateStatus.GetStatusDateDisplayName(item.Status)
                        </dt>
                        <dd class="govuk-summary-list__value">
                            <text> @item.CreatedAt.ToString("dd/MM/yyyy hh:MM:ss")</text>
                        </dd>
                    </div>
                    </dl>

                    <div class="govuk-grid-column-full govuk-!-margin-bottom-3 govuk-!-margin-top-1">
                        <div class="govuk-inset-text">
                            @Localizer["DeliveryOfCertificates"]
                        </div>
                    </div>

                    <p class="govuk-body">

                        @if (Model.IsCertificateWaitingToBeDelivered(item))
                        {
                            <h3>@Localizer["WaitingToBeDelivered"]</h3>
                        }
                        else
                        {
                            var printStatusAtDate = item.PrintStatusAt.HasValue ? item.PrintStatusAt.Value.UtcToTimeZoneTime().ToString("dd/MM/yyyy") : string.Empty;
                            var printStatusAtTime = item.PrintStatusAt.HasValue ? item.PrintStatusAt.Value.UtcToTimeZoneTime().ToString("HH:mm:ss") : string.Empty;

                            if (Model.IsCertificateNotDelivered(item))
                            {
                                <h3>@string.Format(Localizer["NotDelivered"].Value, printStatusAtDate, printStatusAtTime)</h3>
                            }
                            else if (Model.IsCertificateDelivered(item))
                            {
                                <h3>@string.Format(Localizer["Delivered"].Value, printStatusAtDate, printStatusAtTime)</h3>
                            }
                        }
                    </p>

                    <ul class="govuk-list">
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactName)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactOrganisation)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactAddLine1)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactAddLine2)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactAddLine3)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactAddLine4)
                        </li>
                        <li>
                            @Html.DisplayFor(modelItem => item.ContactPostCode)
                        </li>
                    </ul>

                    @if (Model.IsCertificateNotDelivered(item))
                    {
                        <p class="govuk-body">
                            @{
                                var reason = !string.IsNullOrEmpty(item.ReasonForChange) ? item.ReasonForChange : Localizer["NoReasonGiven"].Value;
                                <text>@string.Format(Localizer["ReasonForNotDelivered"].Value, reason)</text>
                            }
                        </p>
                    }

                    @if (item.CertificateStatusList.Any())
                    {

                        <table class="govuk-table govuk-table--small responsive">
                            <thead class="govuk-table__head">
                                <tr class="govuk-table__row">

                                    <th class="govuk-table__header" scope="col">
                                        @Localizer["DateAndTime"]
                                    </th>


                                    <th class="govuk-table__header" scope="col">
                                        @Localizer["Status"]
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="govuk-table__body">
                                @foreach (var statusList in item.CertificateStatusList)
                                {
                                    <tr>
                                        <td class="govuk-table__cell" data-label="@CertificateStatus.GetStatusDateDisplayName(statusList.Status)">
                                            @statusList.CertificateDate.ToString("dd/MM/yyyy hh:MM:ss")
                                        </td>
                                        <td class="govuk-table__cell" data-label="@Localizer["Status"]">
                                            @Html.DisplayFor(modelItem => statusList.Status)
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    }

                }
                                </div>
                                </td>


                                </tr>
                            }
                        </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="info-summary">
                            <h3 class="govuk-heading-m">You have no completed assessments.</h3>
                        </div>
                    }
            </div>
            </div>

            @if (Model.Certificates.HasPreviousPage || Model.Certificates.HasNextPage)
            {
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-full">
                        <div class="page-navigation">

                            @if (Model.Certificates.HasPreviousPage)
                            {
                                <a asp-action="ChangePageCertificateHistory"
                                   asp-controller="CertificateHistory"
                                   asp-route-pageIndex="@(Model.Certificates.PageIndex - 1)"
                                   class="govuk-link previous">
                                    <i class="arrow-button icon-left-open">&#xe800;</i>
                                    <span class="description">Previous <span class="hide-mob">page</span></span>
                                    <span class="counter">Page <span class="prevPage">@(Model.Certificates.PageIndex - 1)</span> of <span class="totalPage">@(Model.Certificates.TotalPages)</span></span>
                                </a>
                            }

                            @if (Model.Certificates.HasNextPage)
                            {
                                <a asp-controller="CertificateHistory"
                                   asp-action="ChangePageCertificateHistory"
                                   asp-route-pageIndex="@(Model.Certificates.PageIndex + 1)"
                                   class="govuk-link next">
                                    <i class="arrow-button icon-right-open">&#xe801;</i>
                                    <span class="description">Next <span class="hide-mob">page</span></span>
                                    <span class="counter">Page <span class="nextPage">@(Model.Certificates.PageIndex + 1)</span> of <span class="totalPage">@(Model.Certificates.TotalPages)</span></span>
                                </a>
                            }

                        </div>
                    </div>
                </div>
            }
        </main>
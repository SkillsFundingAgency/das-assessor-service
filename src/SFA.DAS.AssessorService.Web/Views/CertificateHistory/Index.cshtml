@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@using SFA.DAS.AssessorService.Domain.Paging
@model SFA.DAS.AssessorService.Domain.Paging.PaginatedList<SFA.DAS.AssessorService.Api.Types.Models.Certificates.CertificateSummaryResponse>

@{
    ViewBag.Title = "Completed assessments";
    Layout = "_DashboardLayout";
}

<main class="govuk-main-wrapper " id="main-content" role="main">

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-xl">Completed assessments</h1>
        </div>
    </div>
    
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
        @if (Model.Items.Any())
        {
            <table class="govuk-table govuk-table--small responsive">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="col">
                            @Localizer["Apprentice"]
                        </th>
                        <th class="govuk-table__header" scope="col">
                            @Localizer["ULN"]
                        </th>
                        <th class="govuk-table__header" scope="col">
                            @Localizer["Employer"]
                        </th>
                        <th class="govuk-table__header" scope="col">
                            @Localizer["TrainingProvider"]
                        </th>
                        <th class="govuk-table__header" scope="col">
                            @Localizer["DateRequested"]
                        </th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td data-label="@Localizer["Apprentice"]" class="govuk-table__cell das-no-wrap">
                            <div role="button" tabindex="0" class="js-expand-table-row expand-table-row" data-expand-id="@Html.DisplayFor(modelItem => item.Uln)"><i class="arrow arrow-closed">►</i> <span>@Html.DisplayFor(modelItem => item.FullName)</span></div>
                        </td>
                        <td class="govuk-table__cell" data-label="@Localizer["ULN"]">
                            @Html.DisplayFor(modelItem => item.Uln)
                        </td>
                        <td class="govuk-table__cell" data-label="@Localizer["Employer"]">
                            @Html.DisplayFor(modelItem => item.ContactOrganisation)
                        </td>
                        <td class="govuk-table__cell" data-label="@Localizer["TrainingProvider"]">
                            @Html.DisplayFor(modelItem => item.TrainingProvider)
                        </td>
                        <td class="govuk-table__cell" data-label="@Localizer["DateRequested"]">
                            @item.CreatedAt.ToString("dd/MM/yyyy")
                        </td>
                    </tr>
                    <tr class="js-expandble-cell expandble-cell expandble-cell--hidden" aria-hidden="true">
                        <td class="govuk-table__cell" colspan="5">
                            <div class="expandble-cell-content">
                                <h2 class="govuk-heading-m expandble-cell-content--first-heading">@Localizer["AssessmentDetails"]</h2>
                                <dl class="govuk-summary-list govuk-summary-list--no-border">
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["RecordedBy"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.RecordedBy)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Standard"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.StandardName)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Level"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.Level)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Grade"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.OverallGrade)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["Option"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.CourseOption)</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["AchievementStartDate"]</dt>
                                        @{
                                            var achievementStartDate = item.LearningStartDate.HasValue ? item.LearningStartDate.Value.ToString("dd/MM/yyyy") : "";
                                        }
                                        <dd class="govuk-summary-list__value">@achievementStartDate</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["AchievementDate"]</dt>
                                        @{
                                            var achievementDate = item.AchievementDate.HasValue ? item.AchievementDate.Value.ToString("dd/MM/yyyy") : "";
                                        }
                                        <dd class="govuk-summary-list__value">@achievementDate</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">@Localizer["CertificateNumber"]</dt>
                                        <dd class="govuk-summary-list__value">@Html.DisplayFor(modelItem => item.CertificateReference)</dd>
                                    </div>
                                </dl>

                                <h2 class="govuk-heading-m">@Localizer["PostageDetails"]</h2>

                                <p class="govuk-body">
                                    The certificate was posted to this address.
                                </p>
                                <ul class="govuk-list">
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactName)
                                    </li>
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactOrganisation)
                                    </li>
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactAddLine1)
                                    </li>
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactAddLine2)
                                    </li>
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactAddLine3)
                                    </li>
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactAddLine4)
                                    </li>
                                    <li>
                                        @Html.DisplayFor(modelItem => item.ContactPostCode)
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <div class="info-summary">
                <h3 class="govuk-heading-m">You have no completed assessments.</h3>
            </div>
        }
        </div>
    </div>

    @if (Model.HasPreviousPage || Model.HasNextPage)
    {
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="page-navigation">

                @if (Model.HasPreviousPage)
                {
                    <a 
                        asp-action="Index"
                        asp-controller="CertificateHistory"
                        asp-route-pageIndex="@(Model.PageIndex - 1)"
                        class="govuk-link previous"
                    >
                        <i class="arrow-button icon-left-open">&#xe800;</i>
                        <span class="description">Previous <span class="hide-mob">page</span></span>
                        <span class="counter">Page <span class="prevPage">@(Model.PageIndex - 1)</span> of <span class="totalPage">@(Model.TotalPages)</span></span>
                    </a>
                }

                @if (Model.HasNextPage)
                {
                    <a 
                        asp-controller="CertificateHistory"
                        asp-action="Index"
                        asp-route-pageIndex="@(Model.PageIndex + 1)"
                        class="govuk-link next"
                    >
                        <i class="arrow-button icon-right-open">&#xe801;</i>
                        <span class="description">Next <span class="hide-mob">page</span></span>
                        <span class="counter">Page <span class="nextPage">@(Model.PageIndex + 1)</span> of <span class="totalPage">@(Model.TotalPages)</span></span>
                    </a>
                }

            </div>
        </div>
    </div>
    }
</main>